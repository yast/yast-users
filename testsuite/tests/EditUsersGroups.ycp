/**
 * File:	EditUsersGroups.ycp
 * Module:	Users configurator
 * Summary:	Testing adding and removing user from groups (see bug #136267)
 * Author:	Jiri Suchomel <jsuchome@suse.cz>
 * $Id$
 */

{
    // testedfiles: Users.pm

    import "Directory";
    import "Mode";
    import "Users";

    string tmpdir	= Directory::tmpdir;
    foreach (string file, [ "passwd", "group", "shadow" ], {
	string cmd	= sformat ("/bin/cp ./%1 %2/", file, tmpdir);
	SCR::Execute (.target.bash_output, cmd);
    });
    Users::SetBaseDirectory (tmpdir);
    Users::ReadLocal ();

    map READ = $[
	"etc" : $[
	    "fstab": [],
	    "cryptotab": [],
	    "default": $[
		"useradd": $[
		    "home":	"/home",
		    "groups":	"audio,video",
		    "expire":	nil,
		    "group":	100
		]
	    ],
	],
	"target": $[
	    "stat"	: $[],
	    "size"	: -1,
	    "tmpdir"	: "/tmp/YaST"
	],
	"product": $[
		"features": $[
		    "USE_DESKTOP_SCHEDULER"	: "no",
		    "IO_SCHEDULER"		: "",
		    "ENABLE_AUTOLOGIN"		: "false",
		    "UI_MODE"			: "simple",
		    "EVMS_CONFIG"		: "no",
		    "INCOMPLETE_TRANSLATION_TRESHOLD"	: "99",
		]
	],
	"anyxml"	: nil,
    ];
    map WRITE = $[];
    map EXEC = $[
	"passwd" : $[
	    "init"	: true
	],
	"target" : $[
	    "bash"		: 0,
	    "bash_output"	: $[
		"stdout": "",
	    ],
	],
    ];

    import "Testsuite";

    Mode::SetTest ("test");

    Testsuite::Test (``(Users::Read ()), [READ, WRITE, EXEC], 0);

    map <string,any> group = $[
	"gidNumber"	: 555,
	"cn"		: "ggl",
	"userlist"	: $[ "hh" : 1 ],
	"password"	:"x",
	"type"		: "local",
	"what"		: "add_group"
    ];

    Testsuite::Test (``(Users::AddGroup (group)), [READ, WRITE, EXEC], 0);

    EXEC ["target", "bash_output", "stdout"] = "ggl";

    Testsuite::Test(``(Users::CheckGroup ($[])), [READ, WRITE, EXEC], 0);

    Testsuite::Test(``(Users::CommitGroup ()), [READ, WRITE, EXEC], 0);

    // for home directory checks
    READ["target","stat","isdir"]	= true;

    Users::SelectUserByName ("hh");

    map<string,any> changes = $[
	"grouplist"	: $[
	    "audio"	: 1,
	]
    ];

    Testsuite::Test (``(Users::EditUser (changes)), [READ, WRITE, EXEC], 0);

    EXEC ["target", "bash_output", "stdout"] = "hh";

    string error = (string) Testsuite::Test(``(Users::CheckUser ($[])), [READ,WRITE,EXEC], 0);

    Testsuite::Dump (sformat ("---- unchanged group 'ggl':\n %1", Users::GetGroupByName ("ggl", "")));

    Testsuite::Dump (sformat ("---- unchanged group 'audio':\n %1", Users::GetGroupByName ("audio", "")));

    Testsuite::Test (``(Users::CommitUser ()), [READ, WRITE, EXEC], 0);

    Testsuite::Dump (sformat ("---- changed group 'ggl':\n %1", Users::GetGroupByName ("ggl", "")));

    Testsuite::Dump (sformat ("---- changed group 'audio':\n %1", Users::GetGroupByName ("audio", "")));
}
