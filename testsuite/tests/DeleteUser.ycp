/**
 * File:
 *  DeleteUser.ycp
 *
 * Module:
 *  Users configurator
 *
 * Summary:
 *  Saving user tests.
 *
 * Authors:
 *  Jiri Suchomel <jsuchome@suse.cz>
 *
 */

{
    // testedfiles: Users.pm UsersCache.pm UsersLDAP.pm

    import "Users";
    import "UsersCache";
    import "Mode";
    import "Directory";
    import "Progress";
    import "Report";

    string tmpdir	= Directory::tmpdir;
    foreach (string file, [ "passwd", "group", "shadow" ], {
	string cmd	= sformat ("/bin/cp ./%1 %2/", file, tmpdir);
	SCR::Execute (.target.bash_output, cmd);
    });
    Users::SetBaseDirectory (tmpdir);
    Users::ReadLocal ();

    map READ = $[
	"etc" : $[
	    "fstab": [],
	    "cryptotab": [],
	    "default": $[
		"useradd": $[
		    "home":	"/home",
		    "groups":	"audio,video",
		    "group":	100
		]
	    ],
	],
	"product": $[
		"features": $[
		    "USE_DESKTOP_SCHEDULER"	: "no",
		    "IO_SCHEDULER"		: "",
		    "ENABLE_AUTOLOGIN"		: "false",
		    "UI_MODE"			: "simple",
		    "EVMS_CONFIG"		: "no",
		    "INCOMPLETE_TRANSLATION_TRESHOLD"	: "99",
		]
	],
	"target": $[
	    "size":	-1,
	    "stat":	$[],
	],
    ];

    map WRITE = $[];
    map EXEC = $[
	"passwd" : $[
	    "init"	: true
	],
	"target" : $[
	    "bash"	: 0,
	],
    ];

    import "Testsuite";

    Mode::SetTest ("test");

    Testsuite::Test (``(Users::Read ()), [READ, WRITE, EXEC], 0);

    Testsuite::Dump ( sformat ("local users:\n %1", Users::GetUsers ("uid", "local")));

    Testsuite::Dump ( sformat ("local user names:\n %1", UsersCache::GetUsernames ("local")));
    Testsuite::Dump ( sformat ("local group names:\n %1", UsersCache::GetGroupnames ("local")));
    Users::SelectUserByName ("ii");

    Testsuite::Dump (sformat ("---- user 'ii':\n %1", Users::GetCurrentUser ()));

    Users::SelectGroupByName ("audio");

    Testsuite::Dump (sformat ("---- group 'audio':\n %1", Users::GetCurrentGroup ()));

    Users::SelectGroupByName ("users");

    Testsuite::Dump (sformat ("---- group 'users':\n %1", Users::GetCurrentGroup ()));

    Testsuite::Dump ("==================== running delete ======================");

    Testsuite::Test(``(Users::DeleteUser (true)), [READ], 0);
    Testsuite::Test(``(Users::CommitUser ()), [READ], 0);

    Testsuite::Dump ( sformat ("local user names:\n %1", UsersCache::GetUsernames ("local")));
    Testsuite::Dump ( sformat ("local users:\n %1", Users::GetUsers ("uid", "local")));

    Users::SelectGroupByName ("audio");

    Testsuite::Dump (sformat ("---- group 'audio':\n %1", Users::GetCurrentGroup ()));

    Users::SelectGroupByName ("users");

    Testsuite::Dump (sformat ("---- group 'users':\n %1", Users::GetCurrentGroup ()));
}
