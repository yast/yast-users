/**
 * File		: Import.ycp
 * Module	: Users configurator
 * Summary	: testing Import function
 * Author	: Jiri Suchomel <jsuchome@suse.cz>
 * $Id$
 */
{
    // testedfiles: Users.pm UsersCache.pm

    import "Users";
    import "UsersCache";
    import "Mode";
    import "Directory";
    import "Progress";

    string tmpdir	= Directory::tmpdir;
    foreach (string file, [ "passwd", "group", "shadow" ], {
	SCR::Execute (.target.bash, sformat ("/bin/cp ./%1 %2/", file, tmpdir));
    });
    Users::SetBaseDirectory (tmpdir);
    Users::ReadLocal ();

    import "Testsuite";

    map READ = $[
	"etc" : $[
	    "fstab": [],
	    "cryptotab": [],
	    "default": $[
		"useradd": $[
		    "home":	"/home",
		    "groups":	"audio,video",
		    "inactive":	nil,
		    "expire":	nil,
		    "shell":	nil,
		    "group":	100
		]
	    ],
	],
	"product": $[
		"features": $[
		    "USE_DESKTOP_SCHEDULER"	: "no",
		    "IO_SCHEDULER"		: "",
		    "ENABLE_AUTOLOGIN"		: "false",
		    "UI_MODE"			: "simple",
		    "EVMS_CONFIG"		: "no",
		    "INCOMPLETE_TRANSLATION_TRESHOLD"	: "99",
		]
	],
	"target"	: $[
	    "stat"	: $[],
	    "size"	: -1,
	    "string"	: ""
	],
	"sysconfig"	: $[
	    "displaymanager"	: $[
		"DISPLAYMANAGER"	: ""
	    ],
	],
    ];
    map WRITE = $[];
    map EXEC = $[
	"passwd" : $[
	    "init"	: true
	],
	"target" : $[
	    "bash" :	-1,
	    "bash_output" : $[
		"stdout"	: "ggg",
	    ],
	],
    ];

    Mode::SetTest ("test");

    map<string,any> importing = $[
	"users"		: [
	    $[
		"username"	: "ggg",
		"user_password"	: "password"
	    ],
	],
    ];

    Testsuite::Dump ( sformat ("local user names:\n %1", UsersCache::GetUsernames ("local")));

    Testsuite::Test (``(Users::Import (importing)), [READ,WRITE,EXEC], 0);

    Testsuite::Dump ( sformat ("local user names:\n %1", UsersCache::GetUsernames ("local")));

    Testsuite::Test (``(Users::SelectUserByName ("ggg")), [], 0);

    Testsuite::Dump (sformat ("---- user 'ggg':\n %1", Users::GetCurrentUser ()));
}
